@inproceedings{angelo2022typed,
    author = {\^{A}ngelo, Pedro and Florido, M\'{a}rio},
    title = {A Typed Lambda Calculus with Gradual Intersection Types},
    year = {2022},
    isbn = {9781450397032},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    url = {https://doi.org/10.1145/3551357.3551382},
    doi = {10.1145/3551357.3551382},
    abstract = {Intersection types have the power to type expressions which are all of many different types. Gradual types combine type checking at both compile-time and run-time. Here we combine these two approaches in a new typed calculus that harness both of their strengths. We incorporate these two contributions in a single typed calculus and define an operational semantics with type cast annotations. We also prove several crucial properties of the type system, namely that types are preserved during compilation and evaluation, and that the refined criteria for gradual typing holds.},
    booktitle = {Proceedings of the 24th International Symposium on Principles and Practice of Declarative Programming},
    articleno = {9},
    numpages = {13},
    keywords = {intersection types, gradual typing, typed lambda calculus},
    location = {Tbilisi, Georgia},
    series = {PPDP '22}
}
